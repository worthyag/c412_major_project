---
- hosts: stress
  become: yes
  tasks:
    # Cleaning and refreshing the cache.
    - name: Clean DNF cache
      command: dnf clean all
      changed_when: false

    # - name: Refresh DNF cache
    #   command: dnf makecache
    #   changed_when: false

    # Installing dependencies.
    - name: Install dependencies
      dnf:
        name:
          - epel-release
          - stress
          - stress-ng
          - iperf3
          - mysql
          - mysql-server
          - git
        state: present
        update_cache: yes

    # Install Java 17.
    - name: Installing Java 17 # Required for Jenkins
      copy:
        src: /root/jdk-17.0.14_linux-aarch64_bin.rpm
        dest: /root/jdk-17.0.14_linux-aarch64_bin.rpm

    - name: Install Java RPM
      shell: rpm -ivh /root/jdk-17.0.14_linux-aarch64_bin.rpm

    # Stopping the firewall.
    - name: Stop and Disable the Firewall
      systemd:
        name: firewalld
        state: stopped
        enabled: no

    # Start MySQL
    - name: Enable and Start MySQL
      systemd:
        name: mysqld
        enabled: yes
        state: started

    # Install Jenkins
    - name: Add Jenkins Repository
      get_url:
        url: https://pkg.jenkins.io/redhat/jenkins.repo
        dest: /etc/yum.repos.d/jenkins.repo

    - name: Import Jenkins GPG Key
      rpm_key:
        state: present
        key: https://pkg.jenkins.io/redhat/jenkins.io-2023.key

    - name: Install Jenkins
      dnf:
        name: jenkins
        state: present

    - name: Enable and Start Jenkins
      systemd:
        name: jenkins
        enabled: yes
        state: started

    # Install ngrok
    - name: Download ngrok
      get_url:
        url: https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-arm64.tgz
        dest: /tmp/ngrok.tgz

    - name: Extract and Move ngrok
      shell: |
        tar -xvzf /tmp/ngrok.tgz -C /usr/local/bin
        chmod +x /usr/local/bin/ngrok
      args:
        creates: /usr/local/bin/ngrok

    - name: Create ngrok systemd service
      copy:
        dest: /etc/systemd/system/ngrok.service
        content: |
          [Unit]
          Description=ngrok Tunnel for Jenkins
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/ngrok http 8080
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target

    - name: Enable and Start ngrok service
      systemd:
        name: ngrok
        enabled: yes
        state: started

    # Node Exporter
    - name: Download Node Exporter
      get_url:
        url: 'https://github.com/prometheus/node_exporter/releases/download/v1.9.0/node_exporter-1.9.0.linux-arm64.tar.gz'
        dest: '/tmp/node_exporter.tar.gz'

    - name: Extract Node Exporter
      shell: 'tar -xvzf /tmp/node_exporter.tar.gz -C /usr/local/bin --strip-components=1'
      args:
        creates: /usr/local/bin/node_exporter

    - name: Create Node Exporter systemd service
      copy:
        dest: /etc/systemd/system/node_exporter.service
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/node_exporter
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target

    - name: Enable and Start Node Exporter service
      systemd:
        name: node_exporter
        enabled: yes
        state: started

    # MySQLD Exporter
    - name: Download MySQLD Exporter
      get_url:
        url: 'https://github.com/prometheus/mysqld_exporter/releases/download/v0.16.0/mysqld_exporter-0.16.0.linux-arm64.tar.gz'
        dest: '/tmp/mysqld_exporter.tar.gz'

    - name: Extract MySQLD Exporter
      shell: 'tar -xvzf /tmp/mysqld_exporter.tar.gz -C /usr/local/bin --strip-components=1'
      args:
        creates: /usr/local/bin/mysqld_exporter

    - name: Create MySQLD Exporter systemd service
      copy:
        dest: /etc/systemd/system/mysqld_exporter.service
        content: |
          [Unit]
          Description=MySQLD Exporter
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/mysqld_exporter
          Restart=always
          User=root

          [Install]
          WantedBy=multi-user.target

    - name: Enable and Start MySQLD Exporter service
      systemd:
        name: mysqld_exporter
        enabled: yes
        state: started
